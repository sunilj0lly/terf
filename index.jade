doctype 5
html
  head
    link(href='/stylesheets/style.css', rel='stylesheet')
    script(src='http://code.jquery.com/jquery-1.6.1.min.js')
    script(src='/socket.io/socket.io.js')
    script
      // socket.io specific code
      var socket = io.connect();

      socket.on('connect', function () {
        $('#chat').addClass('connected');
      });

      socket.on('announcement', function (msg) {
        $('#lines').append($('<p>').append($('<em>').text(msg)));
      });

      socket.on('nicknames', function (nicknames) {
        $('#nicknames').empty().append($('<span>Online: </span>'));
        for (var i in nicknames) {
          $('#nicknames').append($('<b>').text(nicknames[i]));
        }
      });

      socket.on('user message', message);
      socket.on('reconnect', function () {
        $('#lines').remove();
        message('System', 'Reconnected to the server');
      });

      socket.on('reconnecting', function () {
        message('System', 'Attempting to re-connect to the server');
      });

      socket.on('error', function (e) {
        message('System', e ? e : 'A unknown error occurred');
      });

      function message (from, msg) {
        if (msg.room == "") {
          return;
        }
        $('#lines').append($('<p>').append($('<b>').text(from), msg.message));
      }

      // dom manipulation
      $(function () {
        $('#set-nickname').submit(function (ev) {
          socket.emit('nickname', $('#nick').val(), function (set) {
            if (!set) {
              clear();
              return $('#chat').addClass('nickname-set');
            }
            $('#nickname-err').css('visibility', 'visible');
          });
          ev.preventDefault();
          return false;
        });

        $('#send-message').submit(function (ev) {
          message('me', { message: $('#message').val(), room: room });
          socket.emit('user message', { message: $('#message').val(), room: room });
          clear();
          $('#lines').get(0).scrollTop = 10000000;
          ev.preventDefault();
          return false;
        });

        function clear () {
          $('#message').val('').focus();
        };
      });

      var geoOpts = {
        enableHighAccuracy: true,
        timeout: 10 * 1000
      };

      var rooms = [];

      var tentTop = {
        name: "Tent",
        latitude: 51.996022872675205,
        longitude: -0.742152649909949
      };

      var tentBottom = {
        name: "Tent Bottom",
        latitude: 51.99612177913263,
        longitude: -0.7421955652541874
      }

      rooms.push(tentTop);
      rooms.push(tentBottom);

      navigator.geolocation.watchPosition(getLocation, onGeoError, geoOpts);

      var room = "";

      function getLocation(location) {
          var coords = location.coords;
          if (coords.accuracy < 10) {
            
            //debug info
            $('.js-info').show();
            $('.js-error').hide();
            $('.js-position').text('lat: ' + coords.latitude + ', long: ' + coords.longitude + ', accuracy: ' + coords.accuracy);
            var distanceToTentTop = getDistanceFromLatLonInM(coords.latitude, coords.longitude, tentTop.latitude, tentTop.longitude);
            $('.js-tent-top').text('distance from tent top: ' + Math.round(distanceToTentTop * 10)/10 + 'm.');
            var distanceToTentBottom = getDistanceFromLatLonInM(coords.latitude, coords.longitude, tentBottom.latitude, tentBottom.longitude);
            $('.js-tent-bottom').text('distance from tent bottom: ' + Math.round(distanceToTentBottom * 10)/10 + 'm.');    

            if (distanceToTentTop < 15) {
              room = "tentTop";
            } else if (distanceToTentBottom < 15) {
              room = "tentBottom";
            } else {
              room = "";
            }

          } else {
            $('.js-info').hide();
            $('.js-error').show();
            $('.js-accuracy').text('Accuracy to within ' + coords.accuracy + 'm.');
            room = "";
          }

          if (room == "") {
            $('.js-room').text("You're not in a room.");  
          } else {
            $('.js-room').text('My room: ' + room);  
          }
      }

      function onGeoError(error) {
        console.log(error);
      }

      function getDistanceFromLatLonInM(lat1,lon1,lat2,lon2) {
        var R = 6371; // Radius of the earth in km
        var dLat = deg2rad(lat2-lat1);  // deg2rad below
        var dLon = deg2rad(lon2-lon1); 
        var a = 
          Math.sin(dLat/2) * Math.sin(dLat/2) +
          Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * 
          Math.sin(dLon/2) * Math.sin(dLon/2)
          ; 
        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
        var d = R * c; // Distance in km
        return d * 1000;
      }

      function deg2rad(deg) {
        return deg * (Math.PI/180)
      }

  body
    .js-info
      .js-position
      .js-tent-top
      .js-tent-bottom
    .js-error
      p Your location is not accurate enough.
      .js-accuracy
    .js-room

    #chat
      #nickname
        form.wrap#set-nickname
          p Please type in your nickname and press enter.
          input#nick
          p#nickname-err Nickname already in use
      #connecting
        .wrap Connecting to socket.io server
      #messages
        #nicknames
        #lines
      form#send-message
        input#message
        button Send
